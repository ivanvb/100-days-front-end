{"version":3,"sources":["../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","days/Day-016/index.js"],"names":["window","onload","document","firstClone","lastClone","getElementsByClassName","slider","container","left","getElementById","right","children","cloneNode","length","insertBefore","appendChild","FIRST_UNCLONED_SLIDE","touches","index","canMove","RIGHT","defaultTransition","getComputedStyle","transition","moveWithoutTransition","style","moveToIndex","transform","moveSliderTo","direction","addEventListener","EDGE_LEFT_SLIDE","EDGE_RIGHT_SLIDE","isEdgeSlide","LAST_UNCLONED_SLIDE","once","e","clientX","changedTouches"],"mappings":"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","file":"Day-016.7b1257c6.js","sourceRoot":"../src","sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","window.onload = () => {\n    const [slider] = document.getElementsByClassName('carousel');\n    const [container] = document.getElementsByClassName('container');\n    const left = document.getElementById('left');\n    const right = document.getElementById('right');\n\n    createCloneSlides();\n\n    const FIRST_UNCLONED_SLIDE = 1;\n\n    let touches = {};\n    let index = FIRST_UNCLONED_SLIDE;\n    let canMove = true;\n    const RIGHT = 'right';\n    const LEFT = 'left';\n    const defaultTransition = window.getComputedStyle(slider).transition;\n\n    moveWithoutTransition(index);\n\n    // Used to achieve infinite slide effect\n    function createCloneSlides() {\n        const firstClone = slider.children[0].cloneNode(true);\n        const lastClone = slider.children[slider.children.length - 1].cloneNode(true);\n\n        slider.insertBefore(lastClone, slider.children[0]);\n        slider.appendChild(firstClone);\n    }\n\n    function moveWithoutTransition(index) {\n        slider.style.transition = 'none';\n        moveToIndex(index);\n    }\n\n    function moveToIndex(index) {\n        slider.style.transform = `translate(-${index * 100}%)`;\n    }\n\n    container.addEventListener('touchstart', (e) => {\n        touches[0] = e.touches[0].clientX;\n    });\n\n    container.addEventListener('touchend', (e) => {\n        const dif = touches[0] - e.changedTouches[0].clientX;\n        dif > 0 ? moveSliderTo(RIGHT) : moveSliderTo(LEFT);\n    });\n\n    right.addEventListener('click', () => {\n        moveSliderTo(RIGHT);\n    });\n    left.addEventListener('click', () => {\n        moveSliderTo(LEFT);\n    });\n\n    function moveSliderTo(direction) {\n        if (canMove) {\n            slider.style.transition = defaultTransition;\n            direction === RIGHT ? index++ : index--;\n            moveToIndex(index);\n            canMove = false;\n\n            slider.addEventListener(\n                'transitionend',\n                () => {\n                    const EDGE_LEFT_SLIDE = 0;\n                    const EDGE_RIGHT_SLIDE = slider.children.length - 1;\n\n                    const isEdgeSlide =\n                        direction === RIGHT\n                            ? index === EDGE_RIGHT_SLIDE\n                            : index === EDGE_LEFT_SLIDE;\n\n                    if (isEdgeSlide) {\n                        const LAST_UNCLONED_SLIDE = slider.children.length - 2;\n                        index = direction === RIGHT ? FIRST_UNCLONED_SLIDE : LAST_UNCLONED_SLIDE;\n                        moveWithoutTransition(index);\n                    }\n                    canMove = true;\n                },\n                { once: true }\n            );\n        }\n    }\n};\n"]}