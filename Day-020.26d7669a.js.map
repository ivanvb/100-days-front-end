{"version":3,"sources":["../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","days/Day-020/index.js"],"names":["centralPanel","document","getElementById","leftPanel","rightPanel","getElementsByClassName","title","container","months","leftButton","rightButton","now","Date","setSideMonths","fillPanelWithMonthlyCalendar","getPreviousMonth","getNextMonth","date","grid","firstDayOfMonth","getFullYear","getMonth","lastDayOfPreviousMonth","getDate","days","i","getDay","unshift","DAYS_IN_MONTH","getDaysInMonth","push","MAX_WEEKS_PER_MONTH","length","innerHTML","join","month","year","updateMonthTitle","move","direction","animatedMoveClass","classList","add","onanimationend","nextMonthToDisplay","remove","addEventListener","e"],"mappings":"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","file":"Day-020.26d7669a.js","sourceRoot":"../src","sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","const centralPanel = document.getElementById('central-panel');\nconst leftPanel = document.getElementById('left-panel');\nconst rightPanel = document.getElementById('right-panel');\n\nconst [title] = document.getElementsByClassName('title');\nconst [container] = document.getElementsByClassName('container');\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nconst [leftButton] = document.getElementsByClassName('left-arrow');\nconst [rightButton] = document.getElementsByClassName('right-arrow');\n\nlet now = new Date();\n\n(function init() {\n    setSideMonths();\n    fillPanelWithMonthlyCalendar(now, centralPanel);\n    updateMonthTitle();\n    rightButton.addEventListener('click', (e) => {\n        move('right');\n    });\n\n    leftButton.addEventListener('click', (e) => {\n        move('left');\n    });\n})();\n\nfunction setSideMonths() {\n    fillPanelWithMonthlyCalendar(getPreviousMonth(now), leftPanel);\n    fillPanelWithMonthlyCalendar(getNextMonth(now), rightPanel);\n}\n\nfunction fillPanelWithMonthlyCalendar(date, grid) {\n    let now = new Date();\n    let firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n    let lastDayOfPreviousMonth = new Date(date.getFullYear(), date.getMonth(), 0).getDate();\n\n    let days = [];\n\n    for (let i = firstDayOfMonth.getDay(); i > 1; i--) {\n        days.unshift(`<span class=\"week-day inactive\">${lastDayOfPreviousMonth--}</span>`);\n    }\n\n    const DAYS_IN_MONTH = getDaysInMonth(date.getMonth(), date.getFullYear());\n    for (let i = 1; i <= DAYS_IN_MONTH; i++) {\n        let isCurrentDay =\n            now.getFullYear() === date.getFullYear() &&\n            now.getMonth() === date.getMonth() &&\n            now.getDate() === i;\n\n        isCurrentDay\n            ? days.push(`<span class=\"week-day\"><div class=\"current\">${i}</div></span>`)\n            : days.push(`<span class=\"week-day\">${i}</span>`);\n    }\n\n    const MAX_WEEKS_PER_MONTH = 6;\n    const DAYS_PER_WEEK = 7;\n    const GRID_SPACES = MAX_WEEKS_PER_MONTH * DAYS_PER_WEEK;\n\n    let i = 0;\n    while (days.length < GRID_SPACES) {\n        days.push(`<span class=\"week-day inactive\">${++i}</span>`);\n    }\n\n    const DAY_NAMES = `<div class=\"day\">Mon</div>\n    <div class=\"day\">Tue</div>\n    <div class=\"day\">Wed</div>\n    <div class=\"day\">Thu</div>\n    <div class=\"day\">Fri</div>\n    <div class=\"day\">Sat</div>\n    <div class=\"day\">Sun</div>`;\n\n    grid.innerHTML = DAY_NAMES + days.join(' ');\n}\n\nfunction getDaysInMonth(month, year) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nfunction updateMonthTitle() {\n    title.innerHTML = `${months[now.getMonth()]} ${now.getFullYear()}`;\n}\n\nfunction move(direction) {\n    let animatedMoveClass = direction === 'left' ? 'move-left' : 'move-right';\n    container.classList.add(animatedMoveClass);\n    container.onanimationend = () => {\n        let nextMonthToDisplay = direction === 'left' ? getPreviousMonth(now) : getNextMonth(now);\n        now = nextMonthToDisplay;\n        fillPanelWithMonthlyCalendar(nextMonthToDisplay, centralPanel);\n        updateMonthTitle();\n        setSideMonths();\n        container.classList.remove(animatedMoveClass);\n    };\n}\n\nfunction getPreviousMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth() - 1, date.getDate());\n}\n\nfunction getNextMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, date.getDate());\n}\n"]}